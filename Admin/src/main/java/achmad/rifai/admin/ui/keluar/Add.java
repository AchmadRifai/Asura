/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package achmad.rifai.admin.ui.keluar;

import java.awt.Color;
import javax.swing.JOptionPane;
import org.joda.money.CurrencyUnit;

/**
 *
 * @author ai
 */
public class Add extends javax.swing.JDialog {
private String id;
private achmad.rifai.erp1.entity.Keluar k;
    /**
     * Creates new form Add
     */
    public Add(java.awt.Frame parent, boolean modal,String i) {
        super(parent, modal);
        id=i;
        initComponents();
    }

    public Add(java.awt.Frame parent, boolean modal,String i,achmad.rifai.erp1.entity.Keluar kel) {
        super(parent, modal);
        id=i;
        k=kel;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        waktu = new javax.swing.JComboBox<>();
        uang = new javax.swing.JFormattedTextField();
        jurnal = new javax.swing.JComboBox<>();
        kode = new javax.swing.JTextField();
        s = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Pendataan Pengeluaran");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setText("Kode");

        jLabel2.setText("Jurnal");

        jLabel3.setText("Uang");

        jLabel4.setText("Waktu");

        waktu.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                waktuItemStateChanged(evt);
            }
        });

        uang.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        uang.setText("0");
        uang.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                uangKeyReleased(evt);
            }
        });

        jurnal.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pilih Satu :" }));
        jurnal.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jurnalItemStateChanged(evt);
            }
        });

        kode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                kodeKeyReleased(evt);
            }
        });

        s.setText("SIMPAN");
        s.setEnabled(false);
        s.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(s, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(waktu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(uang)
                            .addComponent(jurnal, 0, 203, Short.MAX_VALUE)
                            .addComponent(kode))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(kode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jurnal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(uang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(waktu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(s)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        int x=JOptionPane.showConfirmDialog(rootPane, "Apa anda ingin menyimpan perubahan data?", "SIMPAN?", JOptionPane.YES_NO_OPTION);
        if(x==JOptionPane.YES_OPTION)saving();
        this.setVisible(false);
    }//GEN-LAST:event_formWindowClosing

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        jurnale();
        waktune();
        if(k!=null)inisial();
    }//GEN-LAST:event_formWindowOpened

    private void kodeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_kodeKeyReleased
    if(!kode.getText().isEmpty())try {
        achmad.rifai.erp1.util.Db d=achmad.rifai.erp1.util.Work.loadDB();
        achmad.rifai.erp1.entity.Keluar k=achmad.rifai.erp1.entity.Keluar.of(d, kode.getText());
        if(k!=null)kode.setForeground(Color.red);
        else kode.setForeground(Color.BLACK);
        d.close();
    } catch (Exception ex) {
        kode.setForeground(Color.red);
        achmad.rifai.erp1.util.Db.hindar(ex);
    }refresh();
    }//GEN-LAST:event_kodeKeyReleased

    private void jurnalItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jurnalItemStateChanged
        refresh();
    }//GEN-LAST:event_jurnalItemStateChanged

    private void uangKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_uangKeyReleased
        if(!uang.getText().isEmpty()){
            if(!uang.isValid())uang.setForeground(Color.red);
            else uang.setForeground(Color.BLACK);
        }refresh();
    }//GEN-LAST:event_uangKeyReleased

    private void waktuItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_waktuItemStateChanged
        refresh();
    }//GEN-LAST:event_waktuItemStateChanged

    private void sActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sActionPerformed
        saving();
        this.setVisible(false);
    }//GEN-LAST:event_sActionPerformed

    private void inisial() {
        kode.setText(k.getKode());
        jurnal.setSelectedItem(k.getJurnal());
        uang.setText(""+k.getUang().getAmount().longValue());
        waktu.setSelectedItem(k.getTgl());
        s.setEnabled(false);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JComboBox<String> jurnal;
    private javax.swing.JTextField kode;
    private javax.swing.JButton s;
    private javax.swing.JFormattedTextField uang;
    private javax.swing.JComboBox<org.joda.time.DateTime> waktu;
    // End of variables declaration//GEN-END:variables

    private void jurnale() {
    try {
        achmad.rifai.erp1.util.Db d=achmad.rifai.erp1.util.Work.loadDB();
        achmad.rifai.erp1.entity.dao.DAOJurnal dao=new achmad.rifai.erp1.entity.dao.DAOJurnal(d);
        for(achmad.rifai.erp1.entity.Jurnal j:dao.all())jurnal.addItem(j.getKode());
        d.close();
    } catch (Exception ex) {
        achmad.rifai.erp1.util.Db.hindar(ex);
    }
    }

    private void waktune() {
        org.joda.time.DateTime d1=org.joda.time.DateTime.now(),d2;
        if(k!=null){
            if(k.getTgl().isBefore(d1.minusYears(3)))d2=k.getTgl();
            else d2=d1.minusYears(3);
        }else d2=d1.minusYears(3);
        while(d1.isAfter(d2)){
            waktu.addItem(d1);
            d1=d1.minusHours(1);
        }waktu.addItem(k.getTgl());
    }

    private void refresh() {
        s.setEnabled(0!=jurnal.getSelectedIndex()&&!kode.getText().isEmpty()&&Color.BLACK==kode.getForeground()&&!uang.getText().isEmpty()&&
        Color.BLACK==uang.getForeground());
    }

    private void saving() {
    try {
        achmad.rifai.erp1.util.Db d=achmad.rifai.erp1.util.Work.loadDB();
        achmad.rifai.erp1.entity.Keluar b;
        if(k!=null)b=achmad.rifai.erp1.entity.Keluar.of(d, k.getKode());
        else b=new achmad.rifai.erp1.entity.Keluar();
        b.setJurnal(jurnal.getItemAt(jurnal.getSelectedIndex()));
        b.setKode(kode.getText());
        b.setUang(org.joda.money.Money.of(CurrencyUnit.of("IDR"), Long.parseLong(uang.getText())));
        b.setTgl(waktu.getItemAt(waktu.getSelectedIndex()));
        achmad.rifai.admin.util.Work.jejak(id, "Menyimpan Pengeluaran "+b.getKode());
        achmad.rifai.erp1.entity.dao.DAOKeluar dao=new achmad.rifai.erp1.entity.dao.DAOKeluar(d);
        if(k!=null)dao.update(k, b);
        else dao.insert(b);
        d.close();
    } catch (Exception ex) {
        achmad.rifai.erp1.util.Db.hindar(ex);
    }
    }
}