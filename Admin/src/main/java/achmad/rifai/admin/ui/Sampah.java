/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package achmad.rifai.admin.ui;

import achmad.rifai.erp1.util.Db;

/**
 *
 * @author ai
 */
public class Sampah extends javax.swing.JDialog {
private String id;
private achmad.rifai.erp1.entity.BukuAbsen sAbsen;
private achmad.rifai.erp1.entity.Barang sBarang;
private achmad.rifai.erp1.entity.Rekening sAset;
    /**
     * Creates new form Sampah
     */
    public Sampah(java.awt.Frame parent, boolean modal,String i) {
        super(parent, modal);
        id=i;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        jButton1 = new javax.swing.JButton();
        rAbsen = new javax.swing.JButton();
        rBarang = new javax.swing.JButton();
        rAset = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAbsen = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblBarang = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblAset = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblBonus = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblJabatan = new javax.swing.JTable();
        jScrollPane6 = new javax.swing.JScrollPane();
        tblJurnal = new javax.swing.JTable();
        jScrollPane7 = new javax.swing.JScrollPane();
        tblIncome = new javax.swing.JTable();
        jScrollPane8 = new javax.swing.JScrollPane();
        tblKaryawan = new javax.swing.JTable();
        jScrollPane9 = new javax.swing.JScrollPane();
        tblKeluar = new javax.swing.JTable();
        jScrollPane10 = new javax.swing.JScrollPane();
        tblLedger = new javax.swing.JTable();
        jScrollPane11 = new javax.swing.JScrollPane();
        tblPelanggan = new javax.swing.JTable();
        jScrollPane12 = new javax.swing.JScrollPane();
        tblPembelian = new javax.swing.JTable();
        jScrollPane13 = new javax.swing.JScrollPane();
        tblPenjualan = new javax.swing.JTable();
        jScrollPane14 = new javax.swing.JScrollPane();
        tblPesan = new javax.swing.JTable();
        jScrollPane15 = new javax.swing.JScrollPane();
        tblSuplier = new javax.swing.JTable();
        jScrollPane16 = new javax.swing.JScrollPane();
        tblPerilaku = new javax.swing.JTable();
        jScrollPane17 = new javax.swing.JScrollPane();
        tblTugas = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Tempat Sampah");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jToolBar1.setRollover(true);

        jButton1.setText("Kosongkan");
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton1);

        rAbsen.setText("Restore Buku Absen");
        rAbsen.setEnabled(false);
        rAbsen.setFocusable(false);
        rAbsen.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        rAbsen.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        rAbsen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rAbsenActionPerformed(evt);
            }
        });
        jToolBar1.add(rAbsen);

        rBarang.setText("Restore Barang");
        rBarang.setEnabled(false);
        rBarang.setFocusable(false);
        rBarang.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        rBarang.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        rBarang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rBarangActionPerformed(evt);
            }
        });
        jToolBar1.add(rBarang);

        rAset.setText("Restore Aset");
        rAset.setEnabled(false);
        rAset.setFocusable(false);
        rAset.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        rAset.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        rAset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rAsetActionPerformed(evt);
            }
        });
        jToolBar1.add(rAset);

        tblAbsen.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblAbsen.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblAbsenMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblAbsen);

        jTabbedPane1.addTab("Buku Absen", jScrollPane1);

        tblBarang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblBarang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblBarangMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblBarang);

        jTabbedPane1.addTab("Barang", jScrollPane2);

        tblAset.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblAset.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblAsetMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblAset);

        jTabbedPane1.addTab("Aset", jScrollPane3);

        tblBonus.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(tblBonus);

        jTabbedPane1.addTab("Bonus Pegawai", jScrollPane4);

        tblJabatan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane5.setViewportView(tblJabatan);

        jTabbedPane1.addTab("Jabatan", jScrollPane5);

        tblJurnal.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane6.setViewportView(tblJurnal);

        jTabbedPane1.addTab("Jurnal", jScrollPane6);

        tblIncome.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane7.setViewportView(tblIncome);

        jTabbedPane1.addTab("Pemasukan", jScrollPane7);

        tblKaryawan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane8.setViewportView(tblKaryawan);

        jTabbedPane1.addTab("Karyawan", jScrollPane8);

        tblKeluar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane9.setViewportView(tblKeluar);

        jTabbedPane1.addTab("Expenses", jScrollPane9);

        tblLedger.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane10.setViewportView(tblLedger);

        jTabbedPane1.addTab("Ledger", jScrollPane10);

        tblPelanggan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane11.setViewportView(tblPelanggan);

        jTabbedPane1.addTab("Pelanggan", jScrollPane11);

        tblPembelian.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane12.setViewportView(tblPembelian);

        jTabbedPane1.addTab("Pembelian", jScrollPane12);

        tblPenjualan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane13.setViewportView(tblPenjualan);

        jTabbedPane1.addTab("Penjualan", jScrollPane13);

        tblPesan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane14.setViewportView(tblPesan);

        jTabbedPane1.addTab("Pesan", jScrollPane14);

        tblSuplier.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane15.setViewportView(tblSuplier);

        jTabbedPane1.addTab("Suplier", jScrollPane15);

        tblPerilaku.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane16.setViewportView(tblPerilaku);

        jTabbedPane1.addTab("Perilaku", jScrollPane16);

        tblTugas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane17.setViewportView(tblTugas);

        jTabbedPane1.addTab("Tugas", jScrollPane17);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1032, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 497, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
    try {
        achmad.rifai.admin.util.Work.jejak(id, "Menutup dialog tempat sampah");
    } catch (Exception ex) {
        achmad.rifai.erp1.util.Db.hindar(ex);
    }this.setVisible(false);
    this.dispose();
    }//GEN-LAST:event_formWindowClosing

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        new Thread(()->{while(isVisible())reload();}).start();
    }//GEN-LAST:event_formWindowOpened

    private void tblAbsenMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblAbsenMouseClicked
        int x=tblAbsen.getSelectedRow();
        boolean b=tblAbsen.isRowSelected(x);
        if(b)try {
            achmad.rifai.erp1.util.Db d=achmad.rifai.erp1.util.Work.loadDB();
            sAbsen=achmad.rifai.erp1.entity.BukuAbsen.of(d, ""+tblAbsen.getValueAt(x, 0));
            d.close();
            rAbsen.setEnabled(b);
        } catch (Exception ex) {
            achmad.rifai.erp1.util.Db.hindar(ex);
        }
    }//GEN-LAST:event_tblAbsenMouseClicked

    private void rAbsenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rAbsenActionPerformed
    try {
        achmad.rifai.admin.util.Work.jejak(id, "Mengembalikan data Absen "+sAbsen.getTgl());
        achmad.rifai.erp1.util.Db d=achmad.rifai.erp1.util.Work.loadDB();
        achmad.rifai.erp1.entity.BukuAbsen b=achmad.rifai.erp1.entity.BukuAbsen.of(d, sAbsen.getTgl());
        b.setDeleted(false);
        new achmad.rifai.erp1.entity.dao.DAOBukuAbsen(d).update(sAbsen, b);
        d.close();
    } catch (Exception ex) {
        achmad.rifai.erp1.util.Db.hindar(ex);
    }rAbsen.setEnabled(false);
    sAbsen=null;
    }//GEN-LAST:event_rAbsenActionPerformed

    private void tblBarangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblBarangMouseClicked
        int x=tblBarang.getSelectedRow();
        boolean b=tblBarang.isRowSelected(x);
        if(b)try {
            achmad.rifai.erp1.util.Db d=achmad.rifai.erp1.util.Work.loadDB();
            sBarang=achmad.rifai.erp1.entity.Barang.of(d, ""+tblBarang.getValueAt(x, 0));
            d.close();
            rBarang.setEnabled(b);
        } catch (Exception ex) {
            achmad.rifai.erp1.util.Db.hindar(ex);
        }
    }//GEN-LAST:event_tblBarangMouseClicked

    private void rBarangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rBarangActionPerformed
    try {
        achmad.rifai.admin.util.Work.jejak(id, "Mengembalikan barang "+sBarang.getKode());
        achmad.rifai.erp1.util.Db d=achmad.rifai.erp1.util.Work.loadDB();
        achmad.rifai.erp1.entity.Barang b=achmad.rifai.erp1.entity.Barang.of(d, sBarang.getKode());
        b.setDeleted(false);
        new achmad.rifai.erp1.entity.dao.DAOBarang(d).update(sBarang, b);
        d.close();
    } catch (Exception ex) {
        achmad.rifai.erp1.util.Db.hindar(ex);
    }rBarang.setEnabled(false);
    sBarang=null;
    }//GEN-LAST:event_rBarangActionPerformed

    private void tblAsetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblAsetMouseClicked
        int x=tblAset.getSelectedRow();
        boolean b=tblAset.isRowSelected(x);
        if(b)try {
            achmad.rifai.erp1.util.Db d=achmad.rifai.erp1.util.Work.loadDB();
            sAset=achmad.rifai.erp1.entity.Rekening.of(d, ""+tblAset.getValueAt(x, 0));
            d.close();
            rAset.setEnabled(b);
        } catch (Exception ex) {
            achmad.rifai.erp1.util.Db.hindar(ex);
        }
    }//GEN-LAST:event_tblAsetMouseClicked

    private void rAsetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rAsetActionPerformed
    try {
        achmad.rifai.admin.util.Work.jejak(id, "Mengembalikan aset "+sAset.getKode());
        achmad.rifai.erp1.util.Db d=achmad.rifai.erp1.util.Work.loadDB();
        achmad.rifai.erp1.entity.Rekening b=achmad.rifai.erp1.entity.Rekening.of(d, sAset.getKode());
        b.setDeleted(false);
        new achmad.rifai.erp1.entity.dao.DAORekening(d).update(sAset, b);
        d.close();
    } catch (Exception ex) {
        achmad.rifai.erp1.util.Db.hindar(ex);
    }rAset.setEnabled(false);
    sAset=null;
    }//GEN-LAST:event_rAsetActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JScrollPane jScrollPane15;
    private javax.swing.JScrollPane jScrollPane16;
    private javax.swing.JScrollPane jScrollPane17;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JButton rAbsen;
    private javax.swing.JButton rAset;
    private javax.swing.JButton rBarang;
    private javax.swing.JTable tblAbsen;
    private javax.swing.JTable tblAset;
    private javax.swing.JTable tblBarang;
    private javax.swing.JTable tblBonus;
    private javax.swing.JTable tblIncome;
    private javax.swing.JTable tblJabatan;
    private javax.swing.JTable tblJurnal;
    private javax.swing.JTable tblKaryawan;
    private javax.swing.JTable tblKeluar;
    private javax.swing.JTable tblLedger;
    private javax.swing.JTable tblPelanggan;
    private javax.swing.JTable tblPembelian;
    private javax.swing.JTable tblPenjualan;
    private javax.swing.JTable tblPerilaku;
    private javax.swing.JTable tblPesan;
    private javax.swing.JTable tblSuplier;
    private javax.swing.JTable tblTugas;
    // End of variables declaration//GEN-END:variables

    private void reload() {
    try {
        Db d=achmad.rifai.erp1.util.Work.loadDB();
        pertama(d);
        kedua(d);
        ketiga(d);
        d.close();
        Thread.sleep(5000);
    } catch (Exception ex) {
        Db.hindar(ex);
    }
    }

    private void loadAbsen(Db d) throws Exception {
        javax.swing.table.DefaultTableModel m=new javax.swing.table.DefaultTableModel(new String[]{"Tanggal"}, 0){
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }};tblAbsen.setModel(m);
        com.mongodb.DBCursor c=d.getD().getCollectionFromString("bukuabsen").find();
        achmad.rifai.erp1.util.RSA r=achmad.rifai.erp1.util.Work.loadRSA();
        while(c.hasNext()){
            com.mongodb.BasicDBList li=(com.mongodb.BasicDBList) c.next().get("bin");
            String json="";
            for(int x=0;x<li.size();x++)json+=r.decrypt(""+li.get(x));
            achmad.rifai.erp1.entity.BukuAbsen b=new achmad.rifai.erp1.entity.BukuAbsen(json);
            if(b.isDeleted())m.addRow(new Object[]{b.getTgl()});
        }
    }

    private void loadBarang(Db d) throws Exception {
        javax.swing.table.DefaultTableModel m=new javax.swing.table.DefaultTableModel(new String[]{"KODE","NAMA","HARGA","STOK"}, 0){
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };tblBarang.setModel(m);
        achmad.rifai.erp1.util.RSA r=achmad.rifai.erp1.util.Work.loadRSA();
        com.mongodb.DBCursor c=d.getD().getCollectionFromString("barang").find();
        while(c.hasNext()){
            com.mongodb.BasicDBList li=(com.mongodb.BasicDBList) c.next().get("bin");
            String json="";
            for(int x=0;x<li.size();x++)json+=r.decrypt(""+li.get(x));
            achmad.rifai.erp1.entity.Barang b=new achmad.rifai.erp1.entity.Barang(json);
            if(b.isDeleted())m.addRow(new Object[]{b.getKode(),b.getNama(),b.getHarga(),""+b.getStok()+" "+b.getSatuan()});
        }
    }

    private void loadAset(Db d) throws Exception {
        javax.swing.table.DefaultTableModel m=new javax.swing.table.DefaultTableModel(new String[]{"Kode","Golongan","Posisi","Keterangan"
        }, 0){
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };tblAset.setModel(m);
        achmad.rifai.erp1.util.RSA r=achmad.rifai.erp1.util.Work.loadRSA();
        com.mongodb.DBCursor c=d.getD().getCollectionFromString("rekening").find();
        while(c.hasNext()){
            com.mongodb.DBObject o=c.next();
            com.mongodb.BasicDBList li=(com.mongodb.BasicDBList) o.get("bin");
            String json="";
            for(int x=0;x<li.size();x++)json+=r.decrypt(""+li.get(x));
            achmad.rifai.erp1.entity.Rekening re=new achmad.rifai.erp1.entity.Rekening(json);
            if(re.isDeleted())m.addRow(new Object[]{re.getKode(),re.getGolongan(),re.getPosisi(),re.getKet()});
        }
    }

    private void loadBonus(Db d) throws Exception {
        javax.swing.table.DefaultTableModel m=new javax.swing.table.DefaultTableModel(new Object[]{"Kode","Pegawai","Bulan","Tahun"},0){
            private Class[]c=new Class[]{String.class,String.class,java.time.Month.class,java.time.Year.class};
            @Override
            public boolean isCellEditable(int i, int i1) {
                return false;
            }@Override
            public Class<?> getColumnClass(int i) {
                return c[i];
            }
        };tblBonus.setModel(m);
        achmad.rifai.erp1.util.RSA r=achmad.rifai.erp1.util.Work.loadRSA();
        com.mongodb.DBCursor c=d.getD().getCollectionFromString("bulanbonus").find();
        while(c.hasNext()){
            com.mongodb.BasicDBList li=(com.mongodb.BasicDBList) c.next().get("bin");
            String json="";
            for(int x=0;x<li.size();x++)json+=r.decrypt(""+li.get(x));
            achmad.rifai.erp1.entity.BulanBonus b=new achmad.rifai.erp1.entity.BulanBonus(json);
            if(b.isDeleted())m.addRow(new Object[]{b.getKode(),b.getPeg(),b.getBln(),b.getThn()});
        }
    }

    private void loadJabatan(Db d) throws Exception {
        javax.swing.table.DefaultTableModel m=new javax.swing.table.DefaultTableModel(new String[]{"NAMA","GAJI","KAPASITAS"}, 0){
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };tblJabatan.setModel(m);
        achmad.rifai.erp1.util.RSA r=achmad.rifai.erp1.util.Work.loadRSA();
        com.mongodb.DBCursor c=d.getD().getCollectionFromString("jabatan").find();
        while(c.hasNext()){
            com.mongodb.BasicDBList li=(com.mongodb.BasicDBList) c.next().get("bin");
            String json="";
            for(int x=0;x<li.size();x++)json+=r.decrypt(""+li.get(x));
            achmad.rifai.erp1.entity.Jabatan j=new achmad.rifai.erp1.entity.Jabatan(json);
            if(j.isDeleted())m.addRow(new Object[]{j.getNama(),j.getGaji(),j.getKapasitas()});
        }
    }

    private void pertama(Db d) throws Exception {
        loadAbsen(d);
        loadBarang(d);
        loadAset(d);
        loadBonus(d);
        loadJabatan(d);
    }

    private void loadJurnal(Db d) throws Exception {
        javax.swing.table.DefaultTableModel m=new javax.swing.table.DefaultTableModel(new String[]{"Kode","No","Tanggal","Keterangan",
        "Debit","Kredit"}, 0){
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };tblJurnal.setModel(m);
        achmad.rifai.erp1.util.RSA r=achmad.rifai.erp1.util.Work.loadRSA();
        com.mongodb.DBCursor c=d.getD().getCollectionFromString("jurnal").find();
        while(c.hasNext()){
            com.mongodb.BasicDBList li=(com.mongodb.BasicDBList) c.next().get("bin");
            String json="";
            for(int x=0;x<li.size();x++)json+=r.decrypt(""+li.get(x));
            achmad.rifai.erp1.entity.Jurnal j=new achmad.rifai.erp1.entity.Jurnal(json);
            if(j.isDeleted())m.addRow(new Object[]{j.getKode(),j.getNo(),j.getTgl(),j.getKet(),j.getDebit(),j.getKredit()});
        }
    }

    private void loadIncome(Db d) throws Exception {
        javax.swing.table.DefaultTableModel m=new javax.swing.table.DefaultTableModel(new String[]{"KODE","Tanggal","Jurnal","Jumlah"}, 0){
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };tblIncome.setModel(m);
        achmad.rifai.erp1.util.RSA r=achmad.rifai.erp1.util.Work.loadRSA();
        com.mongodb.DBCursor c=d.getD().getCollectionFromString("terima").find();
        while(c.hasNext()){
            com.mongodb.DBObject o=c.next();
            com.mongodb.BasicDBList li=(com.mongodb.BasicDBList) o.get("bin");
            String json="";
            for(int x=0;x<li.size();x++)json+=r.decrypt(""+li.get(x));
            achmad.rifai.erp1.entity.Terima t=new achmad.rifai.erp1.entity.Terima(json);
            if(t.isDeleted())m.addRow(new Object[]{t.getKode(),t.getTgl(),t.getJurnal(),t.getUang()});
        }
    }

    private void loadKaryawan(Db d) throws Exception {
        javax.swing.table.DefaultTableModel m=new javax.swing.table.DefaultTableModel(new String[]{"ID","NAMA","PASSWORD","TANGGAL DITERIMA",
            "JABATAN","E-MAIL","TELP","DICEKAL?","SEDANG LOGIN?"
        }, 0){
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }};tblKaryawan.setModel(m);
        achmad.rifai.erp1.util.RSA r=achmad.rifai.erp1.util.Work.loadRSA();
        com.mongodb.DBCursor c=d.getD().getCollectionFromString("karyawan").find();
        while(c.hasNext()){
            com.mongodb.BasicDBList li=(com.mongodb.BasicDBList) c.next().get("bin");
            String json="";
            for(int x=0;x<li.size();x++)json+=r.decrypt(""+li.get(x));
            achmad.rifai.erp1.entity.Karyawan k=new achmad.rifai.erp1.entity.Karyawan(json);
            if(k.isDeleted())m.addRow(new Object[]{k.getId(),k.getNama(),k.getPass(),k.getHiredate(),k.getJabatan(),k.getEmail(),k.getTelp(),
            k.isBlocked(),k.isMasuk()});
        }
    }

    private void loadExpenses(Db d) throws Exception {
        javax.swing.table.DefaultTableModel m=new javax.swing.table.DefaultTableModel(new String[]{"KODE","JURNAL","TANGGAL","UANG"}, 0){
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };tblKeluar.setModel(m);
        achmad.rifai.erp1.util.RSA r=achmad.rifai.erp1.util.Work.loadRSA();
        com.mongodb.DBCursor c=d.getD().getCollectionFromString("keluar").find();
        while(c.hasNext()){
            com.mongodb.BasicDBList li=(com.mongodb.BasicDBList) c.next().get("bin");
            String json="";
            for(int x=0;x<li.size();x++)json+=r.decrypt(""+li.get(x));
            achmad.rifai.erp1.entity.Keluar k=new achmad.rifai.erp1.entity.Keluar(json);
            if(k.isDeleted())m.addRow(new Object[]{k.getKode(),k.getJurnal(),k.getTgl(),k.getUang()});
        }
    }

    private void loadLedger(Db d) throws Exception {
        javax.swing.table.DefaultTableModel m=new javax.swing.table.DefaultTableModel(new String[]{"Kode","Tanggal","Ket","No","Debit",
        "Kredit"}, 0){
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };tblLedger.setModel(m);
        achmad.rifai.erp1.util.RSA r=achmad.rifai.erp1.util.Work.loadRSA();
        com.mongodb.DBCursor c=d.getD().getCollectionFromString("ledger").find();
        while(c.hasNext()){
            com.mongodb.BasicDBList li=(com.mongodb.BasicDBList) c.next().get("bin");
            String json="";
            for(int x=0;x<li.size();x++)json+=r.decrypt(""+li.get(x));
            achmad.rifai.erp1.entity.Ledger l=new achmad.rifai.erp1.entity.Ledger(json);
            if(l.isDeleted())m.addRow(new Object[]{l.getKode(),l.getTgl(),l.getKet(),l.getNo(),l.getDebit(),l.getKredit()});
        }
    }

    private void kedua(Db d) throws Exception {
        loadJurnal(d);
        loadIncome(d);
        loadKaryawan(d);
        loadExpenses(d);
        loadLedger(d);
    }

    private void loadPelanggan(Db d) throws Exception {
        javax.swing.table.DefaultTableModel m=new javax.swing.table.DefaultTableModel(new String[]{"Kode","Nama","Dicekal"}, 0){
            private Class[]c=new Class[]{String.class,String.class,Boolean.class};
            @Override
            public Class<?> getColumnClass(int x) {
                return c[x];
            }
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };tblPelanggan.setModel(m);
        achmad.rifai.erp1.util.RSA r=achmad.rifai.erp1.util.Work.loadRSA();
        com.mongodb.DBCursor c=d.getD().getCollectionFromString("pelanggan").find();
        while(c.hasNext()){
            com.mongodb.BasicDBList li=(com.mongodb.BasicDBList) c.next().get("bin");
            String json="";
            for(int x=0;x<li.size();x++)json+=r.decrypt(""+li.get(x));
            achmad.rifai.erp1.entity.Pelanggan p=new achmad.rifai.erp1.entity.Pelanggan(json);
            if(p.isDeleted())m.addRow(new Object[]{p.getKode(),p.getNama(),p.isBlocked()});
        }
    }

    private void loadPembelian(Db d) throws Exception {
        javax.swing.table.DefaultTableModel m=new javax.swing.table.DefaultTableModel(new String[]{"STRUK","SUPLIER","TANGGAL",
        "UANG YANG DIKELUARKAN"},0){
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };tblPembelian.setModel(m);
        achmad.rifai.erp1.util.RSA r=achmad.rifai.erp1.util.Work.loadRSA();
        com.mongodb.DBCursor c=d.getD().getCollectionFromString("pembelian").find();
        while(c.hasNext()){
            com.mongodb.DBObject o=c.next();
            com.mongodb.BasicDBList li=(com.mongodb.BasicDBList) o.get("bin");
            String json="";
            for(int x=0;x<li.size();x++)json+=r.decrypt(""+li.get(x));
            achmad.rifai.erp1.entity.Pembelian p=new achmad.rifai.erp1.entity.Pembelian(json);
            if(p.isDeleted())m.addRow(new Object[]{p.getStruk(),p.getSuplier(),p.getTgl(),p.getHarga()});
        }
    }

    private void loadPenjualan(Db d) throws Exception {
        javax.swing.table.DefaultTableModel m=new javax.swing.table.DefaultTableModel(new String[]{"Nota","Pelanggan","Tanggal","Total",
        "UANG YANG DIBAYAR","Keterangan"},0){
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };tblPenjualan.setModel(m);
        achmad.rifai.erp1.util.RSA r=achmad.rifai.erp1.util.Work.loadRSA();
        com.mongodb.DBCursor c=d.getD().getCollectionFromString("penjualan").find();
        while(c.hasNext()){
            com.mongodb.DBObject o=c.next();
            com.mongodb.BasicDBList li=(com.mongodb.BasicDBList) o.get("bin");
            String json="";
            for(int x=0;x<li.size();x++)json+=r.decrypt(""+li.get(x));
            achmad.rifai.erp1.entity.Penjualan p=new achmad.rifai.erp1.entity.Penjualan(json);
            if(p.isDeleted())m.addRow(new Object[]{p.getNota(),p.getPelanggan(),p.getTgl(),p.getTotal(),p.getTerbayar(),p.getKet()});
        }
    }

    private void loadPesan(Db d) throws Exception {
        javax.swing.table.DefaultTableModel m=new javax.swing.table.DefaultTableModel(new String[]{"Kode","Isi Pesan","Pengirim",
        "Waktu"}, 0){
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };tblPesan.setModel(m);
        achmad.rifai.erp1.util.RSA r=achmad.rifai.erp1.util.Work.loadRSA();
        com.mongodb.DBCursor c=d.getD().getCollectionFromString("pesan").find();
        while(c.hasNext()){
            com.mongodb.DBObject o=c.next();
            com.mongodb.BasicDBList li=(com.mongodb.BasicDBList) o.get("bin");
            String json="";
            for(int x=0;x<li.size();x++)json+=r.decrypt(""+li.get(x));
            achmad.rifai.erp1.entity.Pesan p=new achmad.rifai.erp1.entity.Pesan(json);
            if(p.isDeleted())m.addRow(new Object[]{p.getKode(),p.getPesan(),p.getPengirim(),p.getWaktu()});
        }
    }

    private void loadSuplier(Db d) throws Exception {
        javax.swing.table.DefaultTableModel m=new javax.swing.table.DefaultTableModel(new String[]{"Kode","Nama"}, 0){
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };tblSuplier.setModel(m);
        achmad.rifai.erp1.util.RSA r=achmad.rifai.erp1.util.Work.loadRSA();
        com.mongodb.DBCursor c=d.getD().getCollectionFromString("suplier").find();
        while(c.hasNext()){
            com.mongodb.DBObject o=c.next();
            com.mongodb.BasicDBList li=(com.mongodb.BasicDBList) o.get("bin");
            String json="";
            for(int x=0;x<li.size();x++)json+=r.decrypt(""+li.get(x));
            achmad.rifai.erp1.entity.Suplier s=new achmad.rifai.erp1.entity.Suplier(json);
            if(s.isDeleted())m.addRow(new Object[]{s.getKode(),s.getNama()});
        }
    }

    private void ketiga(Db d) throws Exception {
        loadPelanggan(d);
        loadPembelian(d);
        loadPenjualan(d);
        loadPesan(d);
        loadSuplier(d);
        loadPerilaku(d);
        loadTugas(d);
    }

    private void loadPerilaku(Db d) throws Exception {
        javax.swing.table.DefaultTableModel m=new javax.swing.table.DefaultTableModel(new String[]{"Kode","Pelaku","Bulan","Tahun"}, 0){
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };tblPerilaku.setModel(m);
        achmad.rifai.erp1.util.RSA r=achmad.rifai.erp1.util.Work.loadRSA();
        com.mongodb.DBCursor c=d.getD().getCollectionFromString("tracks").find();
        while(c.hasNext()){
            com.mongodb.DBObject o=c.next();
            com.mongodb.BasicDBList li=(com.mongodb.BasicDBList) o.get("bin");
            String json="";
            for(int x=0;x<li.size();x++)json+=r.decrypt(""+li.get(x));
            achmad.rifai.erp1.entity.Tracks t=new achmad.rifai.erp1.entity.Tracks(json);
            if(t.isDeleted())m.addRow(new Object[]{t.getKode(),t.getId(),t.getBln(),t.getTahun()});
        }
    }

    private void loadTugas(Db d) throws Exception {
        javax.swing.table.DefaultTableModel m=new javax.swing.table.DefaultTableModel(new String[]{"KODE","URUTAN","TANGGAL","Keterangan",
        "Dibatalkan","Ditunda"}, 0){
            private Class[]c=new Class[]{String.class,String.class,java.sql.Date.class,String.class,Boolean.class,Boolean.class};
            @Override
            public Class<?> getColumnClass(int x) {
                return c[x];
            }
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };tblTugas.setModel(m);
        achmad.rifai.erp1.util.RSA r=achmad.rifai.erp1.util.Work.loadRSA();
        com.mongodb.DBCursor c=d.getD().getCollectionFromString("tugas").find();
        while(c.hasNext()){
            com.mongodb.DBObject o=c.next();
            com.mongodb.BasicDBList li=(com.mongodb.BasicDBList) o.get("bin");
            String json="";
            for(int x=0;x<li.size();x++)json+=r.decrypt(""+li.get(x));
            achmad.rifai.erp1.entity.Tugas t=new achmad.rifai.erp1.entity.Tugas(json);
            if(t.isDeleted())m.addRow(new Object[]{t.getKode(),t.getNo(),t.getTgl(),t.getKet(),t.isBatal(),t.isPending()});
        }
    }
}